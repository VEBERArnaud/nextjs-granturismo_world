language: node_js
node_js:
  - "8"

install:
  - yarn install

before_script:
  - |
    if [ -z "${TRAVIS_TAG}" ]; then
      export ASSET_PREFIX="${STAGING_ASSET_PREFIX}/${TRAVIS_BRANCH}"
    else
      export ASSET_PREFIX="${PROD_ASSET_PREFIX}/${TRAVIS_TAG}"
    fi

script:
  - yarn build

before_deploy:
  - pip install --user awscli
  - |
    mkdir -p lambda lambdazip
    for file in .next/serverless/pages/*; do
      page=$(basename "${file%.*}");
      cp -R .lambda/ "lambda/${page}/";
      cp "${file}" "lambda/${page}/page.js";
      cd "lambda/${page}/";
      zip -r "../../lambdazip/${page}.zip" ./lambda.js ./node_modules ./page.js;
      cd ../../;
    done

deploy:
  - provider: script
    skip_cleanup: true
    script:
      - >-
        aws s3 sync lambdazip/ "s3://${STAGING_DEPLOYMENT_BUCKET}/${TRAVIS_BRANCH}/" --delete
        && aws s3 sync static/ "s3://${STAGING_ASSET_BUCKET}/${TRAVIS_BRANCH}/static/" --delete --cache-control max-age=31536000,public
        && aws s3 sync .next/static/ "s3://${STAGING_ASSET_BUCKET}/${TRAVIS_BRANCH}/_next/static/" --delete --cache-control max-age=31536000,public
    on:
      branch: master
  - provider: script
    skip_cleanup: true
    script:
      - >-
        aws s3 sync lambdazip/ "s3://${PROD_DEPLOYMENT_BUCKET}/${TRAVIS_TAG}/" --delete
        && aws s3 sync static/ "s3://${PROD_ASSET_BUCKET}/${TRAVIS_TAG}/static/" --delete --cache-control max-age=31536000,public
        && aws s3 sync .next/static/ "s3://${PROD_ASSET_BUCKET}/${TRAVIS_TAG}/_next/static/" --delete --cache-control max-age=31536000,public
    on:
      tags: true
